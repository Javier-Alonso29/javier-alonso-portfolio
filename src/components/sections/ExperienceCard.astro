---
import { getCollection } from "astro:content";
import Card from "../Card.astro";
import { Badge, badgeVariants } from "../ui/badge";
import { Button } from "../ui/button";
import { formateLocalDate } from "../../lib/utils";
import { MapPin } from "lucide-react";

let experiences = await getCollection("experiences");

// Primero ordenamos por fecha
experiences.sort((a: any, b: any) => {
  return (
    new Date(b.data.startDate).getTime() - new Date(a.data.startDate).getTime()
  );
});

// Luego movemos las experiencias con present: true al inicio
experiences.sort((a: any, b: any) => {
  const aPresent = a.data.present === true;
  const bPresent = b.data.present === true;

  if (aPresent && !bPresent) return -1;
  if (!aPresent && bPresent) return 1;
  return 0;
});

experiences = experiences.slice(0, 3);
---

<div class="mt-2 space-y-6">
  {
    experiences.slice(0, 3).map((exp) => (
      <div class="space-y-2">
        <div class="flex justify-between items-start">
          <div>
            <div class="flex items-center gap-2">
              <a href={"/experiences/" + exp?.slug ?? ""}>
                <h4 class="text-md text-primary font-medium hover:underline">
                  {exp.data.title}
                </h4>
              </a>
              {exp.data.present && (
                <Badge
                  variant="outline"
                  className="text-xs bg-primary text-white"
                >
                  Present
                </Badge>
              )}


            </div>
            <div class="flex items-center gap-2">
              <div class="flex items-center gap-2">
                <a class="text-sm hover:underline" href={exp.data.link}>
                  {exp.data.company}
                </a>
              </div>
              {exp.data.location && (
                <>
                  <div class="h-3 w-px bg-muted-foreground/30" />
                  <div class="flex items-center gap-1 text-xs text-muted-foreground">
                    <MapPin size={12} color="#242424" />
                    <span>{exp.data.location}</span>
                  </div>
                </>
              )}
            </div>
          </div>
          <p class="text-sm text-gray-600">
            {formateLocalDate(exp.data.startDate)}{" "}
            {exp.data?.endDate ? "- " + formateLocalDate(exp.data.endDate) : ""}
          </p>
        </div>

        <div class="flex flex-wrap gap-2">
          {exp.data.tags?.slice(0, 9).map((tag) => (
            <span class="text-xs px-2 py-1 bg-muted rounded-full">{tag}</span>
          ))}
        </div>
      </div>
    ))
  }
  <a href="/experiences" class="block pt-2">
    <Button variant="link" className="pl-0">View More</Button>
  </a>
</div>
